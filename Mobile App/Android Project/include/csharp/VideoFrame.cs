// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class VideoFrameReleaseCallbackSingleton
		{
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void ReleaseCallback(IntPtr buffer, ulong size, IntPtr alloc);
		public static ReleaseCallback _mReleaseCallback = releaseCallbackDelegate;
		private static Dictionary<IntPtr, VideoFrame.IConstructFromKnownFormatWithExternalBuffer> ReleaseCallbackMap = new Dictionary<IntPtr, VideoFrame.IConstructFromKnownFormatWithExternalBuffer>();
		private static Dictionary<IntPtr, GCHandle> GCHandleMap = new Dictionary<IntPtr, GCHandle>();
		private static Dictionary<IntPtr, byte[]> ByteArrayMap = new Dictionary<IntPtr, byte[]>();
		public static VideoFrame.IConstructFromKnownFormatWithExternalBuffer _mIConstructFromKnownFormatWithExternalBuffer;
		public static void addReleaseCallbackToMap(IntPtr buffer, ulong size, VideoFrame.IConstructFromKnownFormatWithExternalBuffer callback, GCHandle handle, byte[] byteArray)
		{
			ReleaseCallbackMap[buffer] = callback;
			GCHandleMap[buffer] = handle;
			ByteArrayMap[buffer] = byteArray;
		}
#if __IOS__
[ObjCRuntime.MonoPInvokeCallback(typeof(ReleaseCallback))]
#endif
		private static void releaseCallbackDelegate(IntPtr buffer, ulong size, IntPtr alloc)
		{
			if (ReleaseCallbackMap[buffer] != null)
			{
				VideoFrame.IConstructFromKnownFormatWithExternalBuffer callback = ReleaseCallbackMap[buffer];
				GCHandle pinnedArray = GCHandleMap[buffer];
				callback.ReleaseCallback(ByteArrayMap[buffer], size);
				ByteArrayMap.Remove(buffer);
				ReleaseCallbackMap.Remove(buffer);
				pinnedArray.Free();
				GCHandleMap.Remove(buffer);
			}
		}
	};
	public class VideoFrame: IDisposable {
		private bool disposed = false; 
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoVideoFrame reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoVideoFrameConstructCopyNative(IntPtr other);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoVideoFrameConstructFromKnownFormatWithExternalBufferNative([MarshalAs(UnmanagedType.I4)]MediaFormat format, IntPtr buffer, ulong size, VideoFrameReleaseCallbackSingleton.ReleaseCallback releaseCallback, ulong width, ulong height);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoVideoFrameDestructNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetDataCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetDataCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetDataYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetElapsedTimeNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoVideoFrameGetFormatNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetHeightNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetHeightCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetHeightCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetHeightYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetOffsetCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetOffsetCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetOffsetYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetPitchCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetPitchCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetPitchYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetSizeNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetSizeCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetSizeCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetSizeYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetTimestampNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetWidthNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetWidthCbNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetWidthCrNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoVideoFrameGetWidthYNative(IntPtr f);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I1)]
		private static extern Boolean VidyoVideoFrameSetTimePropertiesNative(IntPtr f, ulong elapsedTime, ulong timestamp);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoVideoFrameGetUserDataNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoVideoFrameSetUserDataNative(IntPtr obj, IntPtr userData);

		public interface IConstructFromKnownFormatWithExternalBuffer{

			void ReleaseCallback(byte[] buffer, ulong size);
		}
		private IConstructFromKnownFormatWithExternalBuffer _mIConstructFromKnownFormatWithExternalBuffer;
		public VideoFrame(MediaFormat format, byte[] buffer, ulong size, IConstructFromKnownFormatWithExternalBuffer _iIConstructFromKnownFormatWithExternalBuffer, ulong width, ulong height){
			GCHandle pinnedArray = GCHandle.Alloc(buffer, GCHandleType.Pinned);
			IntPtr pointer = pinnedArray.AddrOfPinnedObject();
			VideoFrameReleaseCallbackSingleton.addReleaseCallbackToMap(pointer, size, _iIConstructFromKnownFormatWithExternalBuffer, pinnedArray, buffer);


			objPtr = VidyoVideoFrameConstructFromKnownFormatWithExternalBufferNative(format, pointer, size, VideoFrameReleaseCallbackSingleton._mReleaseCallback, width, height);
			VidyoVideoFrameSetUserDataNative(objPtr, GCHandle.ToIntPtr(GCHandle.Alloc(this, GCHandleType.Weak)));
		}
		public VideoFrame(IntPtr other){
			objPtr = VidyoVideoFrameConstructCopyNative(other);
			VidyoVideoFrameSetUserDataNative(objPtr, GCHandle.ToIntPtr(GCHandle.Alloc(this, GCHandleType.Weak)));
		}
		~VideoFrame(){
			Dispose(false);
		}
		public void Dispose(){
			Dispose(true);
			GC.SuppressFinalize(this);
		}

		public void Dispose(bool disposing){
			if(!disposed){
				if(objPtr != IntPtr.Zero){
					VidyoVideoFrameSetUserDataNative(objPtr, IntPtr.Zero);
					VidyoVideoFrameDestructNative(objPtr);
				}
				disposed = true;
			}
		}

		public ulong GetDataCb(){

			ulong ret = VidyoVideoFrameGetDataCbNative(objPtr);

			return ret;
		}
		public ulong GetDataCr(){

			ulong ret = VidyoVideoFrameGetDataCrNative(objPtr);

			return ret;
		}
		public ulong GetDataY(){

			ulong ret = VidyoVideoFrameGetDataYNative(objPtr);

			return ret;
		}
		public ulong GetElapsedTime(){

			ulong ret = VidyoVideoFrameGetElapsedTimeNative(objPtr);

			return ret;
		}
		public String GetFormat(){

			IntPtr ret = VidyoVideoFrameGetFormatNative(objPtr);

			return (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(ret);
		}
		public ulong GetHeight(){

			ulong ret = VidyoVideoFrameGetHeightNative(objPtr);

			return ret;
		}
		public ulong GetHeightCb(){

			ulong ret = VidyoVideoFrameGetHeightCbNative(objPtr);

			return ret;
		}
		public ulong GetHeightCr(){

			ulong ret = VidyoVideoFrameGetHeightCrNative(objPtr);

			return ret;
		}
		public ulong GetHeightY(){

			ulong ret = VidyoVideoFrameGetHeightYNative(objPtr);

			return ret;
		}
		public ulong GetOffsetCb(){

			ulong ret = VidyoVideoFrameGetOffsetCbNative(objPtr);

			return ret;
		}
		public ulong GetOffsetCr(){

			ulong ret = VidyoVideoFrameGetOffsetCrNative(objPtr);

			return ret;
		}
		public ulong GetOffsetY(){

			ulong ret = VidyoVideoFrameGetOffsetYNative(objPtr);

			return ret;
		}
		public ulong GetPitchCb(){

			ulong ret = VidyoVideoFrameGetPitchCbNative(objPtr);

			return ret;
		}
		public ulong GetPitchCr(){

			ulong ret = VidyoVideoFrameGetPitchCrNative(objPtr);

			return ret;
		}
		public ulong GetPitchY(){

			ulong ret = VidyoVideoFrameGetPitchYNative(objPtr);

			return ret;
		}
		public ulong GetSize(){

			ulong ret = VidyoVideoFrameGetSizeNative(objPtr);

			return ret;
		}
		public ulong GetSizeCb(){

			ulong ret = VidyoVideoFrameGetSizeCbNative(objPtr);

			return ret;
		}
		public ulong GetSizeCr(){

			ulong ret = VidyoVideoFrameGetSizeCrNative(objPtr);

			return ret;
		}
		public ulong GetSizeY(){

			ulong ret = VidyoVideoFrameGetSizeYNative(objPtr);

			return ret;
		}
		public ulong GetTimestamp(){

			ulong ret = VidyoVideoFrameGetTimestampNative(objPtr);

			return ret;
		}
		public ulong GetWidth(){

			ulong ret = VidyoVideoFrameGetWidthNative(objPtr);

			return ret;
		}
		public ulong GetWidthCb(){

			ulong ret = VidyoVideoFrameGetWidthCbNative(objPtr);

			return ret;
		}
		public ulong GetWidthCr(){

			ulong ret = VidyoVideoFrameGetWidthCrNative(objPtr);

			return ret;
		}
		public ulong GetWidthY(){

			ulong ret = VidyoVideoFrameGetWidthYNative(objPtr);

			return ret;
		}
		public Boolean SetTimeProperties(ulong elapsedTime, ulong timestamp){

			Boolean ret = VidyoVideoFrameSetTimePropertiesNative(objPtr, elapsedTime, timestamp);

			return ret;
		}
	};
}
