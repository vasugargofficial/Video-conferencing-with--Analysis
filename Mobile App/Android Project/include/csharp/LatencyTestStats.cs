// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class LatencyTestStatsFactory
	{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoLatencyTestStatsConstructDefaultNative();
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoLatencyTestStatsDestructNative(IntPtr obj);
		public static LatencyTestStats Create()
		{
			IntPtr objPtr = VidyoLatencyTestStatsConstructDefaultNative();
			return new LatencyTestStats(objPtr);
		}
		public static void Destroy(LatencyTestStats obj)
		{
			VidyoLatencyTestStatsDestructNative(obj.GetObjectPtr());
		}
	}
	public class LatencyTestStats{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoLatencyTestStats reference.
		public IntPtr GetObjectPtr(){
			IntPtr nLatencyTestDataStats = Marshal.AllocHGlobal(Marshal.SizeOf<IntPtr>() * latencyTestDataStats.Count);
			int nLatencyTestDataStatsSize = 0;

			foreach (LatencyTestDataStats iter in latencyTestDataStats) {
				Marshal.WriteIntPtr(nLatencyTestDataStats + (nLatencyTestDataStatsSize * Marshal.SizeOf<IntPtr>()), iter.GetObjectPtr());
				nLatencyTestDataStatsSize++;
			}

			VidyoLatencyTestStatsSetlatencyTestDataStatsNative(objPtr, nLatencyTestDataStats, nLatencyTestDataStatsSize);

			Marshal.FreeHGlobal(nLatencyTestDataStats);
			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLatencyTestStatsGetlatencyTestDataStatsNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLatencyTestStatsSetlatencyTestDataStatsNative(IntPtr obj, IntPtr latencyTestDataStats, int size);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLatencyTestStatsGetlatencyTestDataStatsArrayNative(IntPtr obj, ref int size);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLatencyTestStatsFreelatencyTestDataStatsArrayNative(IntPtr obj, int size);

		public List<LatencyTestDataStats> latencyTestDataStats;
		public LatencyTestStats(IntPtr obj){
			objPtr = obj;

			List<LatencyTestDataStats> csLatencyTestDataStats = new List<LatencyTestDataStats>();
			int nLatencyTestDataStatsSize = 0;
			IntPtr nLatencyTestDataStats = VidyoLatencyTestStatsGetlatencyTestDataStatsArrayNative(VidyoLatencyTestStatsGetlatencyTestDataStatsNative(objPtr), ref nLatencyTestDataStatsSize);
			int nLatencyTestDataStatsIndex = 0;
			while (nLatencyTestDataStatsIndex < nLatencyTestDataStatsSize) {
				LatencyTestDataStats csTlatencyTestDataStats = new LatencyTestDataStats(Marshal.ReadIntPtr(nLatencyTestDataStats + (nLatencyTestDataStatsIndex * Marshal.SizeOf(nLatencyTestDataStats))));
				csLatencyTestDataStats.Add(csTlatencyTestDataStats);
				nLatencyTestDataStatsIndex++;
			}

			latencyTestDataStats = csLatencyTestDataStats;
			VidyoLatencyTestStatsFreelatencyTestDataStatsArrayNative(nLatencyTestDataStats, nLatencyTestDataStatsSize);
		}
	};
}
