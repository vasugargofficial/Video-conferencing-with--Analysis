// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class RemoteSpeakerStreamStatsFactory
	{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoRemoteSpeakerStreamStatsConstructDefaultNative();
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoRemoteSpeakerStreamStatsDestructNative(IntPtr obj);
		public static RemoteSpeakerStreamStats Create()
		{
			IntPtr objPtr = VidyoRemoteSpeakerStreamStatsConstructDefaultNative();
			return new RemoteSpeakerStreamStats(objPtr);
		}
		public static void Destroy(RemoteSpeakerStreamStats obj)
		{
			VidyoRemoteSpeakerStreamStatsDestructNative(obj.GetObjectPtr());
		}
	}
	public class RemoteSpeakerStreamStats{
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoRemoteSpeakerStreamStats reference.
		public IntPtr GetObjectPtr(){
			IntPtr nCodecName = MarshalPtrToUtf8.GetInstance().MarshalManagedToNative(codecName ?? string.Empty);
			IntPtr nName = MarshalPtrToUtf8.GetInstance().MarshalManagedToNative(name ?? string.Empty);

			VidyoRemoteSpeakerStreamStatsSetbitsPerSampleNative(objPtr, bitsPerSample);
			VidyoRemoteSpeakerStreamStatsSetcodecDtxNative(objPtr, codecDtx);
			VidyoRemoteSpeakerStreamStatsSetcodecNameNative(objPtr, nCodecName);
			VidyoRemoteSpeakerStreamStatsSetcodecQualitySettingNative(objPtr, codecQualitySetting);
			VidyoRemoteSpeakerStreamStatsSetnameNative(objPtr, nName);
			VidyoRemoteSpeakerStreamStatsSetnumberOfChannelsNative(objPtr, numberOfChannels);
			VidyoRemoteSpeakerStreamStatsSetsampleRateNative(objPtr, sampleRate);
			VidyoRemoteSpeakerStreamStatsSetsendNetworkBitRateNative(objPtr, sendNetworkBitRate);
			VidyoRemoteSpeakerStreamStatsSetsendNetworkRttNative(objPtr, sendNetworkRtt);

			Marshal.FreeHGlobal(nName);
			Marshal.FreeHGlobal(nCodecName);
			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetbitsPerSampleNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetbitsPerSampleNative(IntPtr obj, uint bitsPerSample);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetcodecDtxNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetcodecDtxNative(IntPtr obj, uint codecDtx);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteSpeakerStreamStatsGetcodecNameNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetcodecNameNative(IntPtr obj, IntPtr codecName);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetcodecQualitySettingNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetcodecQualitySettingNative(IntPtr obj, uint codecQualitySetting);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteSpeakerStreamStatsGetnameNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetnameNative(IntPtr obj, IntPtr name);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetnumberOfChannelsNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetnumberOfChannelsNative(IntPtr obj, uint numberOfChannels);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetsampleRateNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetsampleRateNative(IntPtr obj, uint sampleRate);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteSpeakerStreamStatsGetsendNetworkBitRateNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetsendNetworkBitRateNative(IntPtr obj, uint sendNetworkBitRate);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteSpeakerStreamStatsGetsendNetworkRttNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteSpeakerStreamStatsSetsendNetworkRttNative(IntPtr obj, ulong sendNetworkRtt);

		public uint bitsPerSample;
		public uint codecDtx;
		public String codecName;
		public uint codecQualitySetting;
		public String name;
		public uint numberOfChannels;
		public uint sampleRate;
		public uint sendNetworkBitRate;
		public ulong sendNetworkRtt;
		public RemoteSpeakerStreamStats(IntPtr obj){
			objPtr = obj;

			bitsPerSample = VidyoRemoteSpeakerStreamStatsGetbitsPerSampleNative(objPtr);
			codecDtx = VidyoRemoteSpeakerStreamStatsGetcodecDtxNative(objPtr);
			codecName = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoRemoteSpeakerStreamStatsGetcodecNameNative(objPtr));
			codecQualitySetting = VidyoRemoteSpeakerStreamStatsGetcodecQualitySettingNative(objPtr);
			name = (string)MarshalPtrToUtf8.GetInstance().MarshalNativeToManaged(VidyoRemoteSpeakerStreamStatsGetnameNative(objPtr));
			numberOfChannels = VidyoRemoteSpeakerStreamStatsGetnumberOfChannelsNative(objPtr);
			sampleRate = VidyoRemoteSpeakerStreamStatsGetsampleRateNative(objPtr);
			sendNetworkBitRate = VidyoRemoteSpeakerStreamStatsGetsendNetworkBitRateNative(objPtr);
			sendNetworkRtt = VidyoRemoteSpeakerStreamStatsGetsendNetworkRttNative(objPtr);
		}
	};
}
